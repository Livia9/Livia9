# ğŸ§  Resumo: Conceitos Fundamentais da ProgramaÃ§Ã£o Orientada a Objetos (POO)

## ğŸ”¹ Classesloll
SÃ£o moldes ou estruturas que definem as caracterÃ­sticas (**atributos**) e comportamentos (**mÃ©todos**) de um tipo de objeto.  
**Exemplo:** uma classe `Carro` pode ter atributos como `cor`, `marca` e `velocidade`, e mÃ©todos como `acelerar()` ou `frear()`.[

---

## ğŸ”¹ Objetos
SÃ£o instÃ¢ncias de uma classe. Ou seja, ao criar um objeto, estamos criando algo com base na estrutura definida pela classe.  
**Exemplo:** um objeto `meuCarro` do tipo `Carro`.

---

## ğŸ”¹ Atributos
SÃ£o as variÃ¡veis que representam as caracterÃ­sticas de um objeto.  
**Exemplo:** `cor`, `ano`, `modelo`.

---

## ğŸ”¹ MÃ©todos
SÃ£o funÃ§Ãµes dentro da classe que definem os comportamentos dos objetos.  
**Exemplo:** `ligarMotor()`, `mostrarDetalhes()`.

---

## ğŸ”¹ AbstraÃ§Ã£o
Ã‰ o princÃ­pio de esconder detalhes complexos e mostrar apenas o necessÃ¡rio.  
Na prÃ¡tica, significa focar no que um objeto **faz** e nÃ£o em **como** ele faz internamente.

---

## ğŸ”¹ Encapsulamento
Ã‰ o ato de proteger os dados do objeto, tornando atributos privados e permitindo acesso/controlado por meio de mÃ©todos pÃºblicos (`get` e `set`).  
Isso ajuda a manter a integridade e seguranÃ§a dos dados.

---

## ğŸ”¹ Polimorfismo
Permite que uma mesma aÃ§Ã£o possa se comportar de maneiras diferentes dependendo do contexto.  
**Exemplo:** o mÃ©todo `exibirDados()` pode estar presente em vÃ¡rias classes e se comportar de forma diferente em cada uma delas.

---
